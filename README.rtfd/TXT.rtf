{\rtf1\ansi\ansicpg1252\cocoartf1138
{\fonttbl\f0\fmodern\fcharset0 Courier;\f1\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;\red52\green52\blue52;\red246\green246\blue246;}
\paperw12240\paperh20160\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720

\f0\fs22 \cf2 \cb3 This is a class that subclasses UITabBarController to look more like the one in the official Twitter app, originally called Tweetie. It is a drop-in class, so you can design your tab bar in the interface builder and simply change the type of the tab bar controller from UITabBarController to TweetieTabBarController in the Identity inspector. The graphical changes won't be displayed in the interface builder, but will be reflected when the application is run.\
\
Delegate methods should still work as the class forwards them when the custom buttons are pressed. No extra work is needed to work with the tab images, they are taken from the actual tab bar, so they are exactly how the original tab bar controller would have drawn them. I don't know how PC this is with Apple yet, I won't know until I submit the application that I'm working on to the App Store. It uses two undocumented methods from UITabBarItem to get the images, UITabBarItem's selectedImage and unselectedImage selectors. Though this isn't exactly doing something potentially dangerous or "bad" so Apple might be okay with it; we'll just have to find out.\
\
Either way, I think this is a cooler solution to the Tweetie style tab bar controller's I found when I googled for this. Fun experience so I thought I'd share!\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f1\fs24 \cf0 \cb1 {{\NeXTGraphic Screen Shot 2011-08-13 at 9.49.31 PM.png \width7920 \height14880
}¬}
\f0\fs22 \
\
(Note, the icons are all the same because I only had one at hand to play with, it will work for all of them though!)\
}